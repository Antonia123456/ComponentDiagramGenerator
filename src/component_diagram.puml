@startuml
component messagecomponents {
component messagecomponents.injector {
component messagecomponents.injector.email {
  class messagecomponents.injector.email.EmailServiceInjector
}
component messagecomponents.injector.sms {
  class messagecomponents.injector.sms.SMSServiceInjector
}
}
component messagecomponents.consumer {
  class messagecomponents.consumer.MyApplication
}
component messagecomponents.test {
  class messagecomponents.test.MyMessageDITest
}
component messagecomponents.service {
component messagecomponents.service.email {
  class messagecomponents.service.email.EmailServiceImpl
}
component messagecomponents.service.sms {
  class messagecomponents.service.sms.SMSServiceImpl
}
}
}
messagecomponents.service.sms.SMSServiceImpl -0)- messagecomponents.service : "MessageService"
messagecomponents.service.email.EmailServiceImpl -0)- messagecomponents.service : "MessageService"
messagecomponents.injector.email.EmailServiceInjector -0)- messagecomponents.injector : "MessageServiceInjector"
messagecomponents.consumer.MyApplication -0)- messagecomponents.consumer : "MessageConsumer"
messagecomponents.injector.sms.SMSServiceInjector -0)- messagecomponents.injector : "MessageServiceInjector"
messagecomponents.test -(0- messagecomponents.consumer : "MessageConsumer"
messagecomponents.injector.email -(0- messagecomponents.consumer : "MessageConsumer"
messagecomponents.injector.email -(0- messagecomponents.service : "MessageService"
messagecomponents.consumer -(0- messagecomponents.service : "MessageService"
messagecomponents.injector.sms -(0- messagecomponents.consumer : "MessageConsumer"
messagecomponents.injector.sms -(0- messagecomponents.service : "MessageService"
messagecomponents.injector -(0- messagecomponents.consumer : "MessageConsumer"
@enduml
